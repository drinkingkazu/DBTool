# note you have to export SHORTHOSTNAME=`hostname -s | sed "s/uboonedaq-//" | sed "s/-//"` to use this

basicTPCseb:
{
  registration:
  {
    name:        sebprivXX
    type:        TPC
    fragment_id: 1
  }

  nu_stream:
  {
    source:               dma
    dma_buffer_size:      2e5
    maxpoll:              1e7
    timesize:             3199
    dmastrategy:          eventboundary
    delay_after_trigger:  0
    max_internal_trigger: 1e9
    circular_buffer_size: 1e9
    configMem_shmKey:     31998

    sink:                 assembler
    port:                 33421
  }

  sn_stream:
  {
    source:  NONE
    sink:    NONE
  }

  neviscard_controller:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x9
  }

  neviscard_nu:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x5
  }

  neviscard_sn:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x4
  }

}

basicTPCcrate:
{
  registration:
  {
    controller: 0
    xmit:       3
    tpc:        [ 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18 ]

    recipe:         NU
    trigger_source: EXT
  }

  slot0:{}
  slot1:{}
  slot2:{}
  slot3:
  { 
    timesize: 3199 
  }
  slot4:
  {
    channels: 64
  }
  slot5:  @local::slot4
  slot6:  @local::slot4
  slot7:  @local::slot4
  slot8:  @local::slot4
  slot9:  @local::slot4
  slot10: @local::slot4
  slot11: @local::slot4
  slot12: @local::slot4
  slot13: @local::slot4
  slot14: @local::slot4
  slot15: @local::slot4
  slot16: @local::slot4
  slot17: @local::slot4
  slot18: @local::slot4
}

basicPMTseb:
{
  registration:
  {
    name:         sebprivXX
    type:         PMT
    fragment_id:  10
    interruptGPS: true
  }

  nu_stream:
  {
    source:               dma_pmt
    dma_buffer_size:      80
    maxpoll:              1e8
    timesize:             3199
    dmastrategy:          disrespect
    delay_after_trigger:  0
    max_internal_trigger: 0
    circular_buffer_size: 1e9
    configMem_shmKey:     31998

    sink:                 assembler
    port:                 33421
  }

  sn_stream:
  {
    source:  NONE
    sink:    NONE
  }

  neviscard_controller:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x3
  }

  neviscard_nu:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x44
  }

  neviscard_sn:
  {
    vendor_id: 0x1172
    device_id: 0x4
    bus:       0x4
  }

  gps:
  {
    enabled:   true
  }
}

basicPMTcrate:
{
  registration:
  {
    controller: 0
    xmit:       4
    tpc:        [ ]
    trigger:    3
    pmt:        [ 6,7,8,9 ]
    shaper:     [ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 ]

    recipe:         npmtcards
    trigger_source: EXT
  }

  slot0:{}
  slot1:{}
  slot2:{}
  slot3:
  { 
    framesize: 25599
    trigmask0: 0   # ??? (if you know, fill-in)
    trigmask1: 0   # Enable PMT-FEM trigger ... 0x0=NONE, 0x1=Beam, 0x4=Cosmic, 0x8=ALL
    trigmask8: 58 #(0x2+0x8+0x20+0x10)=58 #0x2 # Enable external-input trigger ... 0x0=NONE, 0x2=EXT, 0x38=BNB
                             
    prescale0:0 
    prescale1:0 
    prescale8:0
    g1start:0x1
    g1end:0x1
    g1width:0x20
    g1delay:0x10
    g2start:0x1                     
    g2end:0x20
    g2width:0x20
    g2delay:0x10
  }
  slot4:
  {
    timesize: 3199
  }
  slot5:{}
  slot6:
  {
    channels: 40

    enable_top:    0xffff # 3 switches to enable 3 sockets in the front panel of PMT-FEM module.
    enable_middle: 0xffff # Each socket has 16 channels, and 16-bit word is used to enable
    enable_bottom: 0xffff # individual channels per socket. Easier way to enable channels by
                          # channel number is introduced in the later part.

    # Overall channel configuration
    # Parameters specified here is applied to all channels.
    # If you wish to tune parameter value channel-wise, see the later part.
    #
    pmt_precount: 3      # pre-count for discriminators
    pmt_words:    20     # Number of PMT-words to read-in
    pmt_deadtime: 24     # Dead-time in 64MHz sample count
    threshold0:   4      # Discriminator 0 threshold
    threshold1:   400    # Discriminator 1 threshold (cosmic)
    threshold3:   1000   # Discriminator 3 threshold (beam)

    # Parameters for PMT-Trigger condition
    #                                  
    pmt_width:    5      # Sample width to issue PMT-Trigger
    cos_mult:     1      # Disc. 1 multiplicity condition for cosmic trigger
    cos_thres:    200    # Disc. 1 max adc sum  condition for cosmic trigger
    beam_mult:    1      # Disc. 3 multiplicity condition for beam trigger
    beam_thres:   1      # Disc. 3 max adc sum  condition for beam trigger
                                                         
    # Beamgate parameters
    # This is somewhat confusing, but you can see detailed diagram and explanation
    # in PMTFrontEndModule.h. Take a look at there.
    #
    pmt_gate_size:  1500 # Beamgate readout window size in 64MHz clock
    pmt_beam_size:  102  # Beamgate spill width in 64 MHz clock
    pmt_beam_delay: 256  # Beamgate spill start time from the readout window start in 64MHz clock
                      
    # Channel-wise parameter configuration
    # The following allows you to configure some parameters channel-wise.
    # "chwise_enable" is an array of channel numbers you wish to enable & configure.
    # Other "chwise_*" parameters must have the same length and sets self-descriptive parameters.
    # Commented out by default.
    #
    #chwise_enable:     [0,   2,   7   ]  # Channel numbers to be enabled
    #chwise_deadtime:   [44,  44,  44  ]  # Deadtime for enabled channels (64MHz clock)
    #chwise_words:      [40,  40,  40  ]  # Number of samples to readout  (64MHz clock)
    #chwise_threshold1: [20,  20,  20  ]  # Disc. 1 (cosmic) threshold    (ADC count)
    #chwise_threshold3: [1000,1000,1000]  # Disc. 3 (beam)   threshold    (ADC count)
  }
  slot7:  @local::slot6
  slot8:  @local::slot6
  slot9:  @local::slot6
  slot10:{}
  slot11:{}
  slot12:{}
  slot13:{}
  slot14:{}
  slot15:{}
  slot16:{}
  slot17:{}
  slot18:{}
  slot19:{}
  slot20:{}
}

basicAssembler:
{
  registration:
  {
    seb_names: [ "sebpriv01",
    	         "sebpriv02",
    	         "sebpriv03",
    	         "sebpriv04",
    	         "sebpriv05",
    	         "sebpriv06",
    	         "sebpriv07",
    	         "sebpriv08",
    	         "sebpriv09",
    	         "sebpriv10" ]
    seb_types: [ "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "TPC",
    	         "PMT" ]
    seb_ports: [ 33421,
                 33421,
                 33421,
                 33421,
                 33421,
                 33421,
                 33421,
                 33421,
                 33421,
                 33421 ]
  }

  process_and_ship:
  {
    events_per_subrun:  100
    output_directory:   "/data/tmp"
    output_file_header: "physics_data"
    shmKey: 31598
    shmSize: 2e5
  }

  fragment_reception:
  {
    assembler_max_wait: 1000
    port_timeout: 5e3
  }

}
